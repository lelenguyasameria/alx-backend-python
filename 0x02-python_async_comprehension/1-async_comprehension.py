#!/usr/bin/env python3
"""
This module demonstrates the use of asynchronous comprehension by defining
a coroutine named async_comprehension. The coroutine uses an async
comprehension to collect random numbers generated by async_generator.
"""

from typing import List
# Assuming async_generator is defined in async_gen_module.py
from async_gen_module import async_generator

async def async_comprehension() -> List[float]:
    """
    Coroutine that collects 10 random numbers generated by async_generator
    using an asynchronous comprehension.

    Returns:
        List[float]: A list of 10 random numbers.
    """
    # Collect 10 random numbers using an async comprehension
    random_numbers = [i async for i in async_generator()]
    return random_numbers

